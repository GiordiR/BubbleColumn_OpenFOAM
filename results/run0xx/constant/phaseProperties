/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "constant";
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "../input"

type    basicMultiphaseSystem;

phases (air water);

air
{
    type            pureIsothermalPhaseModel;
    diameterModel   isothermal;
    isothermalCoeffs
    {
        d0              $Dbubble;
        p0              1e5;
    }

    residualAlpha   1e-6;
}

water
{
    type            pureIsothermalPhaseModel;
    diameterModel   constant;
    constantCoeffs
    {
        d               1e-4;
    }

    residualAlpha   1e-6;
}

blending
{
    default
    {
        type            linear;
        minFullyContinuousAlpha.air 0.7;
        minPartlyContinuousAlpha.air 0.3;
        minFullyContinuousAlpha.water 0.7;
        minPartlyContinuousAlpha.water 0.3;
    }

    drag
    {
        type            linear;
        minFullyContinuousAlpha.air 0.7;
        minPartlyContinuousAlpha.air 0.5;
        minFullyContinuousAlpha.water 0.7;
        minPartlyContinuousAlpha.water 0.5;
    }
}

surfaceTension
(
    (air and water)
    {
        type            constant;
        sigma           0.072;
    }
);

aspectRatio
(
    (air in water)
    {
        type            constant;
        E0              1.0;
    }

    (water in air)
    {
        type            constant;
        E0              1.0;
    }
);

drag
(
    (air in water)
    {
        type            $Dragmodel;
        residualRe      1e-3;
        residualEo      1e-6;
        residualE       1e-6;
        swarmCorrection
        {
            type        none;
        }
    }

    (water in air)
    {
        type            $Dragmodel;
        residualRe      1e-3;
        residualEo      1e-6;
        residualE       1e-6;
        swarmCorrection
        {
            type        none;
        }
    }

    (air and water)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }
);

virtualMass
(
    (air in water)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    (water in air)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }
);

heatTransfer
(
    (air in water)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }

    (water in air)
    {
        type            RanzMarshall;
        residualAlpha   1e-4;
    }
);

phaseTransfer
();

lift
(
    (air in water)
    {
        type            $Liftmodel;
        /*residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }*/
    }

    (water in air)
    {
        type            $Liftmodel;
        /*residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }*/
    }

    /*(air and water)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }*/
);

wallLubrication
(
    (air in water)
    {
        type            $Walllub;
        Cwd             6.8;
        Cwc             10;
        p               1.7;
        Cw1            -0.01;
        Cw2            0.05;
        D              $Dbubble;
        /*residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }*/
    }

    (water in air)
    {
        type            $Walllub;
        Cwd             6.8;
        Cwc             10;
        p               1.7;
        Cw1            -0.01;
        Cw2            0.05;
        D              $Dbubble;
        /*residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }*/
    }

    /*(air and water)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }*/
);

turbulentDispersion
(
    (air in water)
    {
        type            $Turbdisp;
        Ctd            0.8;
        sigma          0.9;
        //residualAlpha_ 
        /*residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }*/
    }

    (water in air)
    {
        type            $Turbdisp;
        Ctd            0.8;
        sigma          0.9;
        /*residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }*/
    }

    /*(air and water)
    {
        type            segregated;
        m               0.5;
        n               8;
        swarmCorrection
        {
            type        none;
        }
    }*/
);

interfaceCompression
();

// ************************************************************************* //
